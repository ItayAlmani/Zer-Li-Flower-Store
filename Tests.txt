	@Test
	//This test checks Negate() with positive number
	public void TestNegateWithPositiveNum() {
		IMoney Positive=new Money(5,"USD") ;
		IMoney result=Positive.negate();
		IMoney expected=new Money(-5,"USD");
		assertTrue(expected.equals(result));
	}
	
	@Test
	//This test checks Negate() with Negative number
	public void TestNegateWithNegativeNum() {
		IMoney Positive=new Money(-5,"USD") ;
		IMoney result=Positive.negate();
		IMoney expected=new Money(5,"USD");
		assertTrue(expected.equals(result));
	}
	
	@Test
	//This test checks Negate() with Zero
	public void TestNegateWithZero() {
		IMoney Positive=new Money(0,"USD") ;
		IMoney result=Positive.negate();
		IMoney expected=new Money(0,"USD");
		assertTrue(expected.equals(result));
	}
	
	@Test
	//This test checks Negate() with null
	public void testNegatewithNull() throws Exception {
		try 
		{
			IMoney Positive=new Money((Integer) null,"USD") ;
			IMoney result=Positive.negate();
			fail("Sholdnt be here! code is not good");
		}
		catch(NullPointerException e)
		{
			assertTrue(true);
		}		
		 
	}